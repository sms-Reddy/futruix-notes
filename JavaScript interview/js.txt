1.DOM
---------------------------

    DOcument object model . whenever we load the webpage e complete html converts into tree like structure it is called DOM 


2. d/b transitions and animations
---------------------------------------

    transitions: it has smooth changes between two states 
                    it has requires both start and end states
                    triggered only when we clicks or hover

    animations : can create multi step animations
                    run automatically when triggered  
                    use keyframes for animations 

3. inline block and inline block 
-----------------------------------------------

    inline :
    ----------------
        inline comes in straight line and it occupies the widdh based on text 
    block :
    ---------------
        block element occupies the complete width of that block
    inline-block:
    ---------------
        inline block means we need to decide width and height of the tag without mention it also works as block 

4. semantic and non semantic tags
-----------------------------------------

    semantic tags:
    -----------------------------
        a tag with meaningful name known as semantic 
            ex : header , footer , aside , article, section ,main , mark 
    non-semantic tags : div , p , h , span, 
    --------------------

5 . Life cycle hooks
--------------------------------

    1.ngOnchanges 
    -----------------------

        it triggers whenevr @input value changes then it triggers 

    2. ngOnInit
    --------------------

        it triggers whenever we load the component class
    
    3. ngDoCheck
    ---------------------

        it triggers after change detection cycle executed 

    4. ngAfterContentInit
    ---------------------

        it triggers after component intialized all the content projected into a component 

        only one time 

    5. ngAfterContentChecked 
    ----------------------------

        it triggers after change detection on the  content projected into a component every time 

    6. ngAfterViewInit
    -------------------

             it triggers after the fully intialization of component

    7. ngAfterViewChecked
    ------------------------

        It triggers every time change detection on view and its child view 

    8. ngOnDestroy
    -------------------

        whenever we destroy the component when it triggers


6 . difference between constructor and ngOnInit
-----------------------------------------------------------

        constructor 
        --------------------
            constructor is the instance of the component . it is used to inject the service files and injectable fields 

        ngOnInit
        ----------

            it is the life cycle of hook of angular . it is used to whenver the component opens then it will triggers 


7 . Decarators
----------------------------

    Decorators are how angular class decides whether it is component service or directive 

8. Selectors 
-------------------------

    Selectors are the property field in component 
    it is used like tag or property  where we show the content of  component.

9. Service 
-------------------------
    it is used to share the logic or data between multiple compoenents

    instead of copying same code into multiple times we can write in service file and we use service file

10. Injectable
-----------------

    we can use this @injectable decoratory then we can use through inject in any component of project 

11. NgModule
-------------

    it is used to organize and group of components and pipes and service directives 

12. custom pipe creation 
-----------------------------

    pipes are used to manipulate the value of variable present 


        @Pipe({
            name : pipe
        })

        Export class customPipe implements PipeTransform {

            transform(value){
                if(value){
                    return value value.toUpperCase()
                }
            }
        }

    pipe and pipetransform coming from angular core 


13. Directives 
----------------------------------
    directives are used to change the actual dom or properties of  elements 
    1. structural driectives 
    -------------------------------------

        *ngIf *ngFor and *ngSwitch 

    2. Attribute directives 
    ----------------------------

        these are used to chnage the property of the element 

    3. custom directive 
    ----------------------------

        it is used to change the dom and properties based on requirment 

        @directive({
            selector : '[directive]'
        })
        Export class customDirective {
            @Input directive :any = 0

            constructor(private ele : elementRef){}
            ngOnInit(){

                this.el.nativeElement.setStyle('color',red)

            }
        }

14. view child and view children , contentchild and contentchildren 
-------------------------------------------------------------------------------
    view Child 
    --------------

        allow access of one one element or one child component declared inside the template

    viewChildren
    --------------

        allow access of multiple elements inside the template

    content childresn 
    --------------------

        allow access of one element or template content projected inside the component
    
    contentchildren
    -----------------
        allow access of multiple elements in conent projected inside component 


15. Performance Optimization
---------------------------------
    lazy modules 
    track by for ngFor
    ChangeDetection on push 
    avoid complex logic in template file move it into ts file 
    using pure pipes instead of using methods in templated

16. Change Detection Strategy 
-------------------------------

    angular used change detection to check when the modal changes then it triggers 

    by default : it renders every component and sub component
    by onPush : it triggers only input value changes thhen only it triggers 


17. what is rxjs
--------------------------


    reactive extension of javascript
    ----------------------------------

        it is used to process the asynchronous operations 

18. subscribe , unsubscribe , emit , next , observables 
-------------------------------------------------------------

    Observables 
    ----------------

        a stream of data that ccan be listned 

    subscribe
    --------------

        after subscribing then only we get the value from the observables

    emit : 
    -------

        observables can emit the values that values should be catch after subscribe

    next 
    --------
        same as emit 

        in observables system can decide how to emit the values 

        in subject we can decide when to emit 

19. subject and behaviourSubject
---------------------------------------

    behaviourSubject contains initial value and always emits the latest value 


    subject has no initial value and emits value only after subscription



20. signal
----------------

    before signal whenver the value changes then renders the entire component 

    but after using signal we change signal value wherever we use the signal that only be rendered 

21. standalone
----------------------

    standalone copmponent is a no dependancy on any Other modules 
    more light wieght and eazier lazy loading 

22. debounce and throttling
------------------------------
    debounce : wait until a specific function to be called off 

    throttling : ensure function is called after specific time interval 

23. fork join and switchMap 
------------------------------

    forkjoin 
    -----------------

        executes multiple methods a time 

    switch map 
    -------------
        cancel the previous request and calls new request 

24. Promises 
--------------------

    it is used to asynchrounous operations 

    until we wait the method is completed 

25. event looping
------------------------

    JS is single threaded it means it executed ine piece of code at one time 

    event loop is a mechanism that synchrnous code will be converted to asynchrounous code 
     without blocking the main thread 

26. let const and var
------------------------



27. Route guards 
-------------------------

    route guards is used to weather the rout can be accesed or not 

    can activate , can deactivate , canLoad, canActivteChild 

28. router outlet
---------------------------

    router component is a placeholder where the routed components can be siplayed 

29. Http Request 
-----------------------

    HttpModule is used to send http Requests 


30. @input @output eventemitters 
--------------------------------------

    input 
    --------
        received data from parent 
    output 
    --------

        recived data from child 

    event emitters 
    ---------------

        output send th data by using eventEmitters 

31. closures
---------------------------

    closues is a one function is called in anotehr function 

        inner function can be accessible for outer function varibale

32. query params
-------------------------
    query params are used to pass the data from one component to another component by routing 

33. string methods and array methods
-------------------------------------------

    String methods
    -----------------------
        1. toUpperCase()
        2. toLowerCase()
        3. split("")
        4. charAt(i)
        5. conact
        6. substring(start,end)
        7 trim()
        8 includes 
        9 indexOf 
        10. replace 
        11. 



    Array methods
    -------------------

        1. Filter
        2. Find
        3. some
        4. every 
        5. includes
        6. forEach
        7. map
        8. reduce 
        9. sort 
        10. flat
        11. findIndex    
        12. slice(startIndex,endIndex) 1-3 3 is not included 
        ---------------------------------------------------
            in slice without original array chnaged and return nrew array

        13. splice(startIndex,count to remove, addingelemnets)    
        ----------------------------------------------------
            it modifies original array 

34. HttpInterceptors
------------------------------


35. How to handle bulk data 
---------------------------------


36.What is data binding in Angular? Types of data binding.
----------------------------------------------------------

37. What is REST architecture?
-------------------------------------

38.     What are the HTTP methods commonly used in REST APIs?
-----------------------------------------------------------------

39. HttpStatus Codes
------------------------------


